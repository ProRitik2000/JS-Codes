<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <p id="AllFacts"></p>
    <button id="BTN">Get the output</button>
    
    <script>
        // const fetchData=()=>{
        //     return new Promise((resolve,reject)=>{
        //     // console.log(Successfull);
        //     reject('success');
        //     });
        // }
        
        // let promise=fetchData()
        // promise.then(()=>{
        //     console.log("Promise fulfilled");
        // });

        // let promise=fetchData()
        // promise.catch(()=>{
        //     console.log("Network issue");
        // });

        // Promise.catch((error)=>{})
       //Promise Chain

    //    function fetchData1(){
    //     return new Promise((resolve,reject)=>{
    //         setTimeout(()=>{
    //             console.log("Fetching Data1");
    //             resolve("Success1")
    //         },4000)
    //     })
    //    }

    //    function fetchData2(){
    //     return new Promise((resolve,reject)=>{
    //         setTimeout(()=>{
    //             console.log("Fetching Data2");
    //             resolve("Success2")
    //         },4000)
    //     })
    //    }
    //    console.log("Fetching Data1");
    //    let p1=fetchData1();
    //    p1.then((res)=>{
    //     console.log(res);

    //    });

    //    console.log("Fetching Data2");
    //    let p2=fetchData2();
    //    p2.then((res)=>{
    //     console.log(res);
        
    //    });

    //    console.log("Fetching Data1");
    //    let p1=fetchData1();
    //    p1.then((res)=>{
    //     console.log("Fetching Data2");
    //     let p2=fetchData2();
    //     p2.then(()=>{

    //     })
    //    })

    // function fetchData(FirstData,SecondData){
    //     return new Promise((resolve,reject)=>{
    //         setTimeout(()=>{
    //             console.log("Data",FirstData);
    //             resolve("Success");
    //             if(SecondData){
    //                 SecondData();
    //             }
    //         })
    //     })
    // }

    // fetchData(1).then((res)=>{
    //     console.log(res);
    //     fetchData(2).then(()=>{
    //         console.log(res);
    //     })
    // })

    // console.log("Fetching Data1.......");
    // fetchData(1).then((res)=>{
    //     console.log("Fetching Data2.......");
    //        ( return fetchData(2);
    // })


    //Async:- These are the keywords which makes our programming simpler 
            //Async function always return a promise object.
            //Await pauses the execution of its surrounding async function until the promise is settled
    // async function fetchData(){
    //     console.log("Hello javascript!");
    // }

    // function api(){
    //     return new Promise((resolve,reject)=>{
    //         setTimeout(()=>{
    //             console.log("Horoscope Data");
    //             resolve(200);
    //         },2000);
    //     })
    // }
//    async function fetchData(){
//    await api();
//    await api();
//    await api();
//    }

// function fetchData(){
//         return new Promise((resolve,reject)=>{
//             setTimeout(()=>{
//                 console.log("Horoscope");
//                 resolve(200);
//             },2000);
//         })
//     }

//    async function fetchDataAll(){
//     console.log("fetching data1.......");
//     await fetchData(1);

//     console.log("fetching data2.......");
//     await fetchData(2);

//     console.log("fetching data3.......");
//     await fetchData(3);

//     console.log("fetching data4.......");
//     await fetchData(4);
//    }

   const url="https://official-joke-api.appspot.com/random_joke";
   let factspara=document.querySelector("#AllFacts");
//    let promise=fetch(url);
//    console.log(promise);

   
//    const fetchFacts=async()=>{

//     console.log("Fetching facts........");
//     let response=await fetch(url);
//     console.log(response);
//     console.log(response.status);

//     let p=await response.json();
//     // console.log(p[2].text);
//     factspara.innerHTML=p[1].text;
//    }
//    btn.addEventListener("click",getFacts);


function getFacts(){
    fetch(url).then((response)=>{
        return response.json();
    })
    .then((data)=>{
        console.log(data);
        factspara.innerHTML=p[1].text;
    })
}
    btn.addEventListener("click",getFacts);
    </script>

    <!-- //AJAX:-stands for Asynchronous Javascript XML -->
    <!-- JSON:-Javascript Object Notation -->
</body>
</html>


